// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TmkSelersWeb.Data;

#nullable disable

namespace TmkSelersWeb.Migrations
{
    [DbContext(typeof(TmkSelersWebContext))]
    [Migration("20240922185014_mssql.local_migration_260")]
    partial class mssqllocal_migration_260
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppTelemarketing.Entidades.Agendados", b =>
                {
                    b.Property<int>("IdAgendado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgendado"));

                    b.Property<DateTime>("FechaAgenda")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("HoraAgenda")
                        .HasColumnType("time");

                    b.Property<int>("IdProspecto")
                        .HasColumnType("int");

                    b.Property<string>("ObsProspecto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAgendado");

                    b.ToTable("Agendados");
                });

            modelBuilder.Entity("AppTelemarketing.Entidades.Prospecto", b =>
                {
                    b.Property<int>("IdProspecto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProspecto"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Llamado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObsProspecto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TelefonoPrincipal")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Venta")
                        .HasColumnType("bit");

                    b.HasKey("IdProspecto");

                    b.ToTable("Prospectos");
                });

            modelBuilder.Entity("AppTelemarketing.Entidades.Respuestas", b =>
                {
                    b.Property<int>("CodRespuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodRespuesta"));

                    b.Property<string>("Respuesta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodRespuesta");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("AppTelemarketing.Entidades.TipoUsuarios", b =>
                {
                    b.Property<int>("IdTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoUsuario"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoUsuario");

                    b.ToTable("TipoUsuarios");
                });

            modelBuilder.Entity("AppTelemarketing.Entidades.Usuario", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("AceptadoXAdmin")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("IdTipoUsuario");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("TipoUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AppTelemarketing.Entidades.Venta", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("CP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodigoProd")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("HoraComienzo")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("HoraFin")
                        .HasColumnType("time");

                    b.Property<int>("IdLocalidad")
                        .HasColumnType("int");

                    b.Property<int>("IdMedioDePago")
                        .HasColumnType("int");

                    b.Property<int>("IdProspecto")
                        .HasColumnType("int");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObsSobreVenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TelSecundario")
                        .HasColumnType("int");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("IdCliente");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("AppTelemarketing.Entidades.Usuario", b =>
                {
                    b.HasOne("AppTelemarketing.Entidades.TipoUsuarios", "TipoUsuariosNavigation")
                        .WithMany()
                        .HasForeignKey("TipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuariosNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
